server {
    server_name lua_nginx.com www.lua_nginx.com;
    root /var/www/lua_nginx;
    default_type text/plain;

    location / {
        # try to serve file directly, fallback to app.php
        default_type 'text/plain';
        content_by_lua_file /var/www/lua_nginx/public/test.lua;

    }
    location /memcached {
        content_by_lua '
            local sock = ngx.socket.connect("127.0.0.1", 11211)
            sock:send("SET foo bar 3600\r\n")
            local line = sock:receive()
            if line then
                ngx.say(line)
            end
            sock:setkeepalive()
        ';
    }
    location /ctx {
        access_by_lua '
            ngx.ctx.userid = 12345
        ';
        content_by_lua '
            ngx.say(ngx.ctx.userid)
        ';
    }
    location /redis_transactions {
        content_by_lua_file /var/www/lua_nginx/public/redis_transactions.lua;

    }
    location  /verify {
        default_type text/plain;

        content_by_lua '
            local cjson = require "cjson"
            local jwt = require "resty.jwt"

            local jwt_token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIifQ.VxhQcGihWyHuJeHhpUiq2FU7aW2s_3ZJlY6h1kdlmJY"
            local jwt_obj = jwt:verify("lua-resty-jwt", jwt_token)
            local str = cjson.encode(jwt_obj)
            ngx.say(str)
        ';
    }
    location  /sign {
        default_type text/plain;

        content_by_lua '
            local cjson = require "cjson"
            local jwt = require "resty.jwt"

            local jwt_token = jwt:sign(
                "lua-resty-jwt",
                {
                    header={typ="JWT", alg="HS256"},
                    payload={foo="bar"}
                }
            )
            ngx.say(jwt_token)
        ';
    }
    location /jwt {
        access_log off;
        default_type text/plain;

        set $jwt_secret "your-own-jwt-secret";
        access_by_lua_file /var/www/lua_nginx/lib/resty/guard.lua;

        #echo "i am protected by jwt guard";
    }
    location /postgres {
        default_type text/plain;
        content_by_lua_file /var/www/lua_nginx/public/postgres_connect.lua;
    }
    error_log /var/log/nginx/project_error.log;
    access_log /var/log/nginx/project_access.log;
}